# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: ci

on:
  pull_request:
  push:
    branches: [main]
permissions:
  checks: write

jobs:
  build_linux:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        java: ['11', '17']
    name: Linux Java ${{ matrix.java }}
    steps:
      - uses: actions/checkout@v4
      - name: jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
      - name: gradle caching
        uses: gradle/actions/setup-gradle@v4
      - run: sudo apt-get install xvfb
      - run: git fetch origin main
      - run: |
          Xvfb :99 &
          export DISPLAY=:99
          ./gradlew build
      - name: cleanup xvfb pidx
        uses: bcomnes/cleanup-xvfb@v1
      - run: |
          ls -R */build/test-results/test/
      - name: junit result
        uses: mikepenz/action-junit-report@v5
        if: always() # always run even if the previous step fails
        with:
          check_name: Linux Java ${{ matrix.java }} JUnit
          report_paths: '*/build/test-results/test/TEST-*.xml'
  build_win:
    runs-on: windows-latest
    strategy:
      matrix:
        java: ['17']
    name: Win Java ${{ matrix.java }}
    steps:
      - uses: actions/checkout@v4
      - name: jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
      - name: gradle caching
        uses: gradle/actions/setup-gradle@v4
      - run: git fetch origin main
      - run: ./gradlew build
      - name: junit result
        uses: mikepenz/action-junit-report@v5
        if: always() # always run even if the previous step fails
        with:
          check_name: Windows Java ${{ matrix.java }} JUnit
          report_paths: '*/build/test-results/test/TEST-*.xml'